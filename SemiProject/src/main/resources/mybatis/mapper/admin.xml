<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.semi.mapper.AdminMapper">

	<resultMap type="AccessLogDTO" id="AccessLogMap">
		<result column="ACCESS_LOG_NO" property="accessLogNo" />
		<result column="ID" property="id" />
		<result column="LAST_LOGIN_DATE" property="lastLoginDate" />
	</resultMap>
	<resultMap type="SleepUserDTO" id="SleepUserMap">
		<result column="USER_NO" property="userNo" />
		<result column="ID" property="id" />
		<result column="PW" property="pw" />
		<result column="NAME" property="name" />
		<result column="GENDER" property="gender" />
		<result column="EMAIL" property="email" />
		<result column="MOBILE" property="mobile" />
		<result column="BIRTH_YEAR" property="birthYear" />
		<result column="BIRTHDAY" property="birthDay" />
		<result column="POSTCODE" property="postcode" />
		<result column="ROAD_ADDRESS" property="roadAddress" />
		<result column="JIBUN_ADDRESS" property="jibunAddress" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="EXTRA_ADDRESS" property="extraAddress" />
		<result column="AGREE_CODE" property="agreeCode" />
		<result column="SNS_TYPE" property="snsType" />
		<result column="JOIN_DATE" property="joinDate" />
		<result column="LAST_LOGIN_DATE" property="lastLoginDate" />
		<result column="SLEEP_DATE" property="sleepDate" />
		<result column="POINT" property="point" />
	</resultMap>
	<resultMap type="UserDTO" id="UserMap">
		<result column="USER_NO" property="userNo" />
		<result column="ID" property="id" />
		<result column="PW" property="pw" />
		<result column="NAME" property="name" />
		<result column="GENDER" property="gender" />
		<result column="EMAIL" property="email" />
		<result column="MOBILE" property="mobile" />
		<result column="BIRTH_YEAR" property="birthYear" />
		<result column="BIRTHDAY" property="birthDay" />
		<result column="POSTCODE" property="postcode" />
		<result column="ROAD_ADDRESS" property="roadAddress" />
		<result column="JIBUN_ADDRESS" property="jibunAddress" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="EXTRA_ADDRESS" property="extraAddress" />
		<result column="AGREE_CODE" property="agreeCode" />
		<result column="SNS_TYPE" property="snsType" />
		<result column="JOIN_DATE" property="joinDate" />
		<result column="PW_MODIFY_DATE" property="pwModifyDate" />
		<result column="INFO_MODIFY_DATE" property="infoModifyDate" />
		<result column="SESSION_ID" property="sessionId" />
		<result column="SESSION_LIMIT_DATE" property="sessionLimitDate" />
		<result column="POINT" property="point" />
		<collection resultMap="AccessLogMap" property="accessLogDTO"></collection>
	</resultMap>
	<resultMap type="AllUserDTO" id="AllUserMap">
		<collection resultMap="UserMap" property="userDTO"></collection>
		<collection resultMap="SleepUserMap" property="sleepUserDTO"></collection>
	</resultMap>
	
	<!-- 전체조회 -->
	<select id="selectAllUserList" parameterType="Map" resultMap="AllUserMap">
		SELECT D.RN, D.USER_NO, D.ID, D.PW, D.NAME, D.GENDER, D.EMAIL, D.BIRTHYEAR, D.BIRTHDAY, D.SNS_TYPE, D.JOIN_DATE, D.INFO_MODIFY_DATE, D.LAST_LOGIN_DATE, D.SLEEP_DATE, D.POINT
  		  FROM (SELECT ROWNUM AS RN, C.USER_NO, C.ID, C.PW, C.NAME, C.GENDER, C.EMAIL, C.BIRTHYEAR, C.BIRTHDAY, C.SNS_TYPE, C.JOIN_DATE, C.INFO_MODIFY_DATE, C.LAST_LOGIN_DATE, C.SLEEP_DATE, C.POINT
          		  FROM (SELECT U.USER_NO, U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.BIRTHYEAR, U.BIRTHDAY, U.SNS_TYPE, U.JOIN_DATE, U.INFO_MODIFY_DATE, A.LAST_LOGIN_DATE, NULL SLEEP_DATE, U.POINT
                  		  FROM USERS U LEFT OUTER JOIN ACCESS_LOG A
                    		ON U.ID = A.ID
                		UNION
                		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, BIRTHYEAR, BIRTHDAY, SNS_TYPE, JOIN_DATE, NULL INFO_MODIFY_DATE, LAST_LOGIN_DATE, SLEEP_DATE, POINT
                  		  FROM SLEEP_USERS) C) D
 		 <where>
 		 	D.RN BETWEEN #{begin} AND #{end}
		  <if test="column=='ID'">AND ${column} LIKE '%' || #{query} || '%'</if>
		  <if test="column=='JOIN_DATE' or column=='SLEEP_DATE'">AND D.${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
		  <if test="column=='POINT'">AND ${column} BETWEEN #{first} AND #{last}</if>
		</where>
	</select>
	
	<select id="selectAllUserCountByQuery" parameterType="Map" resultType="int">
		SELECT COUNT(*)
 		  FROM USERS U FULL OUTER JOIN SLEEP_USERS S
    		ON U.ID = S.ID
	</select>
	
	<!-- 활동유저 조회 -->
	<select id="selectUsersByQuery" parameterType="Map" resultMap="AllUserMap">
		SELECT C.RN, C.USER_NO, C.ID, C.PW, C.NAME, C.GENDER, C.EMAIL, C.BIRTHYEAR, C.BIRTHDAY, C.SNS_TYPE, C.JOIN_DATE, C.INFO_MODIFY_DATE, C.LAST_LOGIN_DATE, C.POINT
		  FROM (SELECT ROWNUM AS RN, B.USER_NO, B.ID, B.PW, B.NAME, B.GENDER, B.EMAIL, B.BIRTHYEAR, B.BIRTHDAY, B.SNS_TYPE, B.JOIN_DATE, B.INFO_MODIFY_DATE, B.LAST_LOGIN_DATE, B.POINT
        		  FROM (SELECT U.USER_NO, U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.BIRTHYEAR, U.BIRTHDAY, U.SNS_TYPE, U.JOIN_DATE, U.INFO_MODIFY_DATE, A.LAST_LOGIN_DATE, U.POINT
                		  FROM USERS U LEFT OUTER JOIN ACCESS_LOG A
                  		  	ON U.ID = A.ID
               			 ORDER BY U.JOIN_DATE DESC) B) C
		<where>
		  <if test="true">C.RN BETWEEN #{begin} AND #{end}</if>
		  <if test="column=='ID'">AND C.${column} LIKE '%' || #{query} || '%'</if>
		  <if test="column=='JOIN_DATE'">AND C.${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
		  <if test="column=='POINT'">AND C.${column} BETWEEN #{first} AND #{last}</if>
		</where>
	</select>
	
	<select id="selectUserCountByQuery" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM USERS
		<where>
		  <if test="column=='ID'">${column} LIKE '%' || #{query} || '%'</if>
		  <if test="column=='JOIN_DATE'">${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
		  <if test="column=='POINT'">${column} BETWEEN #{first} AND #{last}</if>
		</where>
	</select>
	
	<!-- 휴면유저 조회 -->
	<select id="selectSleepUsersByQuery" parameterType="Map" resultMap="AllUserMap">
		SELECT B.RN, B.USER_NO, B.ID, B.PW, B.NAME, B.GENDER, B.EMAIL, B.MOBILE, B.BIRTHYEAR, B.BIRTHDAY, B.POSTCODE, B.ROAD_ADDRESS, B.JIBUN_ADDRESS, B.DETAIL_ADDRESS, B.EXTRA_ADDRESS, B.AGREE_CODE, B.SNS_TYPE, B.JOIN_DATE, B.LAST_LOGIN_DATE, B.SLEEP_DATE, B.POINT
  		  FROM (SELECT ROWNUM AS RN, A.USER_NO, A.ID, A.PW, A.NAME, A.GENDER, A.EMAIL, A.MOBILE, A.BIRTHYEAR, A.BIRTHDAY, A.POSTCODE, A.ROAD_ADDRESS, A.JIBUN_ADDRESS, A.DETAIL_ADDRESS, A.EXTRA_ADDRESS, A.AGREE_CODE, A.SNS_TYPE, A.JOIN_DATE, A.LAST_LOGIN_DATE, A.SLEEP_DATE, A.POINT
          		  FROM (SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE, POINT
                  		  FROM SLEEP_USERS
                 		 ORDER BY SLEEP_DATE DESC) A) B
		<where>
			B.RN BETWEEN #{begin} AND #{end}
		  <if test="column=='ID'">AND B.${column} LIKE '%' || #{query} || '%'</if>
		  <if test="column=='JOIN_DATE' or column=='SLEEP_DATE'">AND B.${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
		  <if test="column=='POINT'">AND B.${column} BETWEEN #{first} AND #{last}</if>
		</where>
		 ORDER BY SLEEP_DATE DESC
	</select>
	
	<select id="selectSleepUserCountByQuery" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM SLEEP_USERS
		<where>
		  <if test="column=='ID'">${column} LIKE '%' || #{query} || '%'</if>
		  <if test="column=='JOIN_DATE' or column=='SLEEP_DATE'">${column} BETWEEN TO_DATE(#{start}, 'yyyy-mm-dd') AND TO_DATE(#{stop}, 'yyyy-mm-dd')</if>
		  <if test="column=='POINT'">${column} BETWEEN #{first} AND #{last}</if>
		</where>
	</select>
	
	<!-- 유저 삭제 -->
	<delete id="deleteUser" parameterType="String">
		DELETE
		  FROM USERS
		 WHERE ID = #{id}
	</delete>
	
	<insert id="insertRetireUser" parameterType="map">
		INSERT INTO RETIRE_USERS (USER_NO, ID, JOIN_DATE, RETIRE_DATE)
			(SELECT USER_NO, ID, JOIN_DATE, SYSDATE
			     FROM ${userType}
			    WHERE ID = #{id})
	</insert>

	<delete id="deleteSleepUser" parameterType="String">
		DELETE
		  FROM SLEEP_USERS
		 WHERE ID = #{id}
	</delete>
	
	<!-- 유저 복구 -->
	<insert id="insertRestoreUser" parameterType="String">
		INSERT INTO USERS(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE)
         (SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE
            FROM SLEEP_USERS
           WHERE ID = #{id})
	</insert>
	
	
</mapper>