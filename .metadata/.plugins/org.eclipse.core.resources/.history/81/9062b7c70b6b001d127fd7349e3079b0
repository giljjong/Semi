package com.gdu.semi.service;

import java.io.File;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.MultipartRequest;

import com.gdu.semi.domain.AttachDTO;
import com.gdu.semi.domain.UploadBoardDTO;
import com.gdu.semi.mapper.UploadBoardMapper;
import com.gdu.semi.util.MyFileUtil;


@Service
public class UploadBoardServiceImpl implements UploadBoardService {

	
	@Autowired
	UploadBoardMapper uploadBoardMapper;
	
	@Autowired
	private MyFileUtil myFileUtil;
	
	@Override
	public List<UploadBoardDTO> getUpLoadList() {
		return uploadBoardMapper.selectUploadList();
	}
	
	@Transactional
	@Override
	public void save(MultipartHttpServletRequest multipartHttpServletRequest, HttpServletResponse response) {
		
		String title = multipartHttpServletRequest.getParameter("title");
		String content = multipartHttpServletRequest.getParameter("content");
		String ip = multipartHttpServletRequest.getRemoteAddr();
		String id = "임시 id" ;
		
		UploadBoardDTO upload = UploadBoardDTO.builder()
				.uploadTitle(title)
				.uploadContent(content)
				.ip(ip)
				.ip(ip)
				.build();
		
		int uploadResult = uploadBoardMapper.insertUpload(upload);
		
		List<MultipartFile> files = multipartHttpServletRequest.getFiles("files");
		
		int attachResult;
		if(files.get(0).getSize() == 0) {
			attachResult = 1;
		} else {
			attachResult = 0;
		}
		
		for(MultipartFile multipartFile : files) {
			try {
				if(multipartFile != null && multipartFile.isEmpty() == false ) {
					
					String origin = multipartFile.getOriginalFilename();
					origin = origin.substring(origin.lastIndexOf("\\") +1);
					
					String filesystem = myFileUtil.getFilename(origin);
					
					String path = myFileUtil.getTodayPath();
					
					File dir =new File(path);
					if(dir.exists() == false ) {
						dir.mkdirs();
					}
					
					File file = new File(dir, filesystem);
					
					multipartFile.transferTo(file);
					
					AttachDTO attach = AttachDTO.builder()
							.path(path)
							.origin(origin)
							.filesystem(filesystem)
							.uploadBoardNo(upload.getUploadBoardNo())
							.build();
					
					attachResult += uploadBoardMapper.insertAttach(attach);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		try {
			response.setContentType("text/html; charset=UTF-8");
			PrintWriter out = response.getWriter();
			
			if(uploadResult > 0 && attachResult == files.size()) {
				out.println("<script>");
				out.println("alert('업로드 되었습니다.');");
				out.println("location.href='" + multipartHttpServletRequest.getContextPath() + "/upload/list'");
				out.println("</script>");
			} else {
				out.println("<script>");
				out.println("alert('업로드 실패했습니다.');");
				out.println("history.back();");
				out.println("</script>");
			}
			out.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
}
