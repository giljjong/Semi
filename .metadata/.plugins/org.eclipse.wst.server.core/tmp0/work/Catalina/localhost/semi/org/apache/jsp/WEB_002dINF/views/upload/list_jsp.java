/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2022-11-30 09:47:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.upload;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Semi/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SemiProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1666750748295L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("	fn_uploadList();\r\n");
      out.write("	fn_allList();\r\n");
      out.write("	fn_searchList();\r\n");
      out.write("	fn_write();\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		function fn_uploadList(){	\r\n");
      out.write("			$.ajax({	\r\n");
      out.write("				type : 'get',\r\n");
      out.write("				url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/ulist',\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				data : 'pageNo=' + ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ,\r\n");
      out.write("				success: function(resData){\r\n");
      out.write("					$('#paging').empty();\r\n");
      out.write("					$('#result').empty();\r\n");
      out.write("					$.each(resData.uploadList, function( i , uploadList){\r\n");
      out.write("						$('<tr>')\r\n");
      out.write("						.append( $('<td>').text(uploadList.uploadBoardNo) )\r\n");
      out.write("						.append( $('<td>').append( $('<a>').text(uploadList.uploadTitle).attr('href' ,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/incrase/hit?uploadBoardNo=' + uploadList.uploadBoardNo ) ) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.createDate) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.attachCnt) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.ip) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.hit) )\r\n");
      out.write("						.appendTo('#result');	\r\n");
      out.write("					\r\n");
      out.write("					})	\r\n");
      out.write("					\r\n");
      out.write("					var str = '' ;	\r\n");
      out.write("			 	    if(resData.beginPage != 1){\r\n");
      out.write("						str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + Number(resData.beginPage -1) + '>' + '◀' + '</a>';\r\n");
      out.write("					}  \r\n");
      out.write("				 	for(let p = resData.beginPage; p <= resData.endPage; p++){\r\n");
      out.write("					 	if(p == resData.page){\r\n");
      out.write("					 		str += '<strong>' + p + '</strong>' ;\r\n");
      out.write("						}  \r\n");
      out.write("						else {\r\n");
      out.write("							str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + p +'>'+ p + '</a>';\r\n");
      out.write("						} \r\n");
      out.write("					} \r\n");
      out.write("					if(resData.endPage != resData.totalPage) {\r\n");
      out.write("						str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + Number(resData.endPage + 1) + '>' + '▶' + '</a>';\r\n");
      out.write("						console.log(str);\r\n");
      out.write("					}     \r\n");
      out.write("					 \r\n");
      out.write("					   \r\n");
      out.write("					 $('#paging').append(str);   	\r\n");
      out.write("				},\r\n");
      out.write("				error: function(jqXHR){\r\n");
      out.write("					alert('리스트 불러오기가 실패했습니다.');\r\n");
      out.write("				}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function fn_searchList(){\r\n");
      out.write("		$('#btn_search').click(function (){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : 'get',\r\n");
      out.write("				url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/search',\r\n");
      out.write("				data : 'pageNo=' + ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '&column=' + $('#column').val() + '&query=' + $('#query').val(),\r\n");
      out.write("				dataType : 'json',\r\n");
      out.write("				success : function (resData){\r\n");
      out.write("					console.log(resData)\r\n");
      out.write("					$('#paging').empty();\r\n");
      out.write("					$('#result').empty();\r\n");
      out.write("					$.each(resData.uploadList, function( i , uploadList){\r\n");
      out.write("						$('<tr>')\r\n");
      out.write("						.append( $('<td>').text(uploadList.uploadBoardNo) )\r\n");
      out.write("						.append( $('<td>').append( $('<a>').text(uploadList.uploadTitle).attr('href' ,'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/incrase/hit?uploadBoardNo=' + uploadList.uploadBoardNo ) ) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.createDate) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.attachCnt) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.ip) )\r\n");
      out.write("						.append( $('<td>').text(uploadList.hit) )\r\n");
      out.write("						.appendTo('#result');	\r\n");
      out.write("					\r\n");
      out.write("					})	\r\n");
      out.write("					\r\n");
      out.write("					var str = '' ;	\r\n");
      out.write("			 	    if(resData.beginPage != 1){\r\n");
      out.write("						str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + Number(resData.beginPage -1) + '>' + '◀' + '</a>';\r\n");
      out.write("					}  \r\n");
      out.write("				 	for(let p = resData.beginPage; p <= resData.endPage; p++){\r\n");
      out.write("					 	if(p == resData.page){\r\n");
      out.write("					 		str += '<strong>' + p + '</strong>' ;\r\n");
      out.write("						}  \r\n");
      out.write("						else {\r\n");
      out.write("							 /* str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + p + '>'+ p + '</a>'; */\r\n");
      out.write("							 str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/search?pageNo=' + p + '&column=' + resData.column + '&query=' + resData.query  + '>'+ p + '</a>'; \r\n");
      out.write("						} \r\n");
      out.write("					} \r\n");
      out.write("					if(resData.endPage != resData.totalPage) {\r\n");
      out.write("						str += '<a href=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/list?pageNo=' + Number(resData.endPage + 1) + '>' + '▶' + '</a>';\r\n");
      out.write("						console.log(str);\r\n");
      out.write("					}     \r\n");
      out.write("					 \r\n");
      out.write("					   \r\n");
      out.write("					 $('#paging').append(str);   	\r\n");
      out.write("				},\r\n");
      out.write("				error: function(jqXHR){\r\n");
      out.write("					alert('리스트 불러오기가 실패했습니다.');\r\n");
      out.write("				\r\n");
      out.write("				} \r\n");
      out.write("			})\r\n");
      out.write("		})		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function fn_allList(){\r\n");
      out.write("		$('#btn_all').click(function (){\r\n");
      out.write("			fn_uploadList();	\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function fn_write(){\r\n");
      out.write("		$('#btn_write').click(function (){\r\n");
      out.write("\r\n");
      out.write("			if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\r\n");
      out.write("				$('#frm_write').attr('action', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/write');\r\n");
      out.write("				$('#frm_write').submit();				\r\n");
      out.write("			} else {\r\n");
      out.write("				alert('로그인을 해야지 작성이 가능합니다.');\r\n");
      out.write("				event.preventDefault();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<form id=\"frm_write\" >\r\n");
      out.write("				<input type=\"button\" value=\"작성\" id=\"btn_write\" >\r\n");
      out.write("			</form>\r\n");
      out.write("			\r\n");
      out.write("			<a href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/write\">작성</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<form id=\"frm_search\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/upload/search\">\r\n");
      out.write("				<select id=\"column\" name=\"column\">\r\n");
      out.write("					<option value=\"\">::선택::<option>\r\n");
      out.write("					<option value=\"UPLOAD_TITLE\">제목</option>\r\n");
      out.write("					<option value=\"ID\">아이디</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				<span id=\"area1\">\r\n");
      out.write("					<input type=\"text\" id=\"query\" name=\"query\">\r\n");
      out.write("				</span>\r\n");
      out.write("				<span>\r\n");
      out.write("					<input type=\"button\" value=\"검색\" id=\"btn_search\">\r\n");
      out.write("					<input type=\"button\" value=\"전체사원조회\" id=\"btn_all\"> \r\n");
      out.write("				</span>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<hr>\r\n");
      out.write("		\r\n");
      out.write("		<div>\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>번호</td>\r\n");
      out.write("						<td>제목</td>\r\n");
      out.write("						<td>작성일</td>\r\n");
      out.write("						<td>첨부개수</td>\r\n");
      out.write("						<td>아이피</td>\r\n");
      out.write("						<td>조회수</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody id =\"result\">\r\n");
      out.write("				</tbody>\r\n");
      out.write("				<tfoot>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"6\" id=\"paging\" >\r\n");
      out.write("						\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</tfoot>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/upload/list.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/upload/list.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/upload/list.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
